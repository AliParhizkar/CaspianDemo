@namespace Caspian.UI
    <div class="t-grid-pager t-grid-bottom">
        <div class="t-pager t-reset">
            <a @onclick="GoToFirstPage" tabindex="-1" class="t-link @(PageNumber == 1 ? "t-state-disabled" : "")">
                <i class="t-icon t-arrow-first fa fa-step-forward"></i>
            </a>
            <a @onclick="GoToPrePage" tabindex="-1" class="t-link @(PageNumber == 1 ? "t-state-disabled" : "")">
                <i class="t-icon t-arrow-prev fa fa-caret-right"></i>
            </a>
            <div class="t-numeric">
                @if (startPageNumber > 1)
                {
                    <a class="t-link"
                       @onclick="async () =>
                             {
                                await ChangePageNumber(startPageNumber - 1);
                             }">...</a>
                }
                @for (var index = startPageNumber; index < endPageNumber; index++)
                {
                    var pageNumber = index;
                    if (index == PageNumber)
                    {
                        <span class="t-state-active">@(index)</span>
                    }
                    else
                    {
                        <a class="t-link" @onclick="async () =>
                                                {
                                                    await ChangePageNumber(pageNumber);
                                                }">@(index)</a>
                    }
                }
                @if (endPageNumber <= PageCount)
                {
                    <a class="t-link"
                       @onclick="async () =>
                             {
                                await ChangePageNumber(endPageNumber);
                             }">...</a>
                }
            </div>
            <a @onclick="GoToNextPage" tabindex="-1" class="t-link @(PageNumber == PageCount ? "t-state-disabled" : "")">
                <i class="t-icon t-arrow-next fa fa-caret-left"></i>
            </a>
            <a @onclick="GoToLastPage" tabindex="-1" class="t-link @(PageNumber == PageCount ? "t-state-disabled" : "")">
                <i class="t-icon t-arrow-last fa fa-step-backward"></i>
            </a>
        </div>
        <div class="t-status-text">
            @(startRowIndex + "-" + endRowIndex + " از " + TotalRecord + " ردیف")
        </div>
    </div>
@code 
{
    int startRowIndex;
    int endRowIndex;
    int pageNumberCount = 7;
    int startPageNumber;
    int endPageNumber;

    [Parameter]
    public int TotalRecord { get; set; }

    [Parameter]
    public int PageSize { get; set; }

    [Parameter]
    public int PageNumber { get; set; }

    [Parameter]
    public EventCallback<int> OnPageNumberChanged { get; set; }

    public int PageCount
    {
        get
        {
            return (TotalRecord - 1) / PageSize + 1;
        }
    }

    async Task GoToFirstPage()
    {
        if (PageNumber != 1)
            await ChangePageNumber(1);
    }

    async Task GoToPrePage()
    {
        if (PageNumber > 1)
            await ChangePageNumber(PageNumber - 1);
    }

    async Task GoToNextPage()
    {
        if (PageNumber < PageCount)
            await ChangePageNumber(PageNumber + 1);
    }

    async Task GoToLastPage()
    {
        if (PageNumber != PageCount)
            await ChangePageNumber(PageCount);
    }

    async Task ChangePageNumber(int pageNumber)
    {
        PageNumber = pageNumber;
        if (OnPageNumberChanged.HasDelegate)
            await OnPageNumberChanged.InvokeAsync(PageNumber);
    }

    protected override void OnParametersSet()
    {
        startRowIndex = (PageNumber - 1) * PageSize + 1;
        endRowIndex = startRowIndex + PageSize - 1;
        if (endRowIndex > TotalRecord)
            endRowIndex = TotalRecord;
        startPageNumber = (PageNumber - 1)/ pageNumberCount * pageNumberCount + 1;
        endPageNumber = startPageNumber + pageNumberCount;
        if (endPageNumber > PageCount)
            endPageNumber = PageCount + 1;
        base.OnParametersSet();
    }
}
